on:
  push:
    branches:
      - master
      - 'dev*'
      - 'fix*'
      - 'issue*'
      - 'doc*'
      - 'gh-actions'
      - 'githubactions'
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest,   r: 'devel'}
          - {os: macOS-latest,   r: '4.1'}
          - {os: macOS-latest,   r: '3.6'}
          - {os: windows-latest, r: '4.1'}
          # - {os: windows-latest, r: '3.6'} # xgboost fails
          - {os: ubuntu-18.04, r: '4.1', vdiffr: true,  xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.6', vdiffr: true,  xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@master
      
    # - uses: r-lib/actions/setup-pandoc@master
      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.7.3' # The pandoc version to download (if necessary) and use.
      - run: echo "# Test" | pandoc -t html
      
      - uses: actions/checkout@v2
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          
      - uses: s-weigand/setup-conda@v1
        with:
          activate-conda: false
          
      - run: conda --version
      - run: which python

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds",version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-
          
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt-get install libomp-dev
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo apt-get install -y qpdf

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran(c("rcmdcheck", "XML"))
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          Sys.setenv(CONDA_TEST = "example", JAVA = "example", R_CHECK_DONTTEST_EXAMPLES = "false")
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--run-dontrun"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
